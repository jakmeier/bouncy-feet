/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbindgen_export_2: WebAssembly.Table;
export function audioeffect_soundId(a: number, b: number): void;
export function cartesian2d_add(a: number, b: number): number;
export function cartesian2d_new(a: number, b: number): number;
export function cartesian3d_new(a: number, b: number, c: number): number;
export function course_explanation(a: number, b: number): void;
export function course_featuredStep(a: number): number;
export function course_id(a: number, b: number): void;
export function course_lessons(a: number, b: number): void;
export function course_name(a: number, b: number): void;
export function course_tracker(a: number, b: number): number;
export function dancebuilder_addStep(a: number, b: number, c: number): void;
export function dancebuilder_clear(a: number): void;
export function dancebuilder_danceInfo(a: number): number;
export function danceBuilderFromDance(a: number, b: number, c: number): void;
export function dancebuilder_insertStep(a: number, b: number, c: number, d: number, e: number): void;
export function dancebuilder_isFlipped(a: number, b: number, c: number): void;
export function dancebuilder_length(a: number): number;
export function dancebuilder_new(a: number, b: number): number;
export function dancebuilder_removeStep(a: number, b: number, c: number): void;
export function dancebuilder_setId(a: number, b: number, c: number): void;
export function dancebuilder_setOrientation(a: number, b: number, c: number, d: number): void;
export function dancefilebuilder_addDance(a: number, b: number, c: number): void;
export function dancefilebuilder_buildRon(a: number, b: number): void;
export function dancefilebuilder_danceBuilder(a: number, b: number, c: number, d: number): void;
export function dancefilebuilder_dances(a: number, b: number): void;
export function dancefilebuilder_fromRon(a: number, b: number, c: number): void;
export function dancefilebuilder_new(): number;
export function dancefilebuilder_overwriteDance(a: number, b: number, c: number): void;
export function dancefilebuilder_removeDance(a: number, b: number, c: number, d: number): void;
export function danceinfo_beats(a: number): number;
export function danceinfo_bodyShift(a: number, b: number): number;
export function danceinfo_id(a: number, b: number): void;
export function danceinfo_length(a: number): number;
export function danceinfo_skeleton(a: number, b: number): number;
export function danceinfo_steps(a: number, b: number): void;
export function dances(a: number): void;
export function detectedstep_bpm(a: number): number;
export function detectedstep_name(a: number, b: number): void;
export function detectedstep_poses(a: number, b: number): void;
export function detectionresult_new_default(): number;
export function detectionresult_poseError(a: number): number;
export function detectionresult_poseHint(a: number): number;
export function detectionresult_steps(a: number, b: number): void;
export function exportedframe_keypoints(a: number, b: number): void;
export function exportedframe_pose(a: number, b: number): void;
export function keypoints_new(a: number, b: number, c: number): number;
export function keypointsside_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function lesson_explanation(a: number, b: number): void;
export function lesson_iconUrl(a: number, b: number): void;
export function lesson_name(a: number, b: number): void;
export function lessonpart_bpms(a: number, b: number): void;
export function lessonpart_explanation(a: number, b: number): void;
export function lesson_parts(a: number, b: number): void;
export function lessonpart_step(a: number): number;
export function lessonpart_stepName(a: number, b: number): void;
export function lesson_video(a: number, b: number): void;
export function limberror_name(a: number, b: number): void;
export function limberror_render(a: number, b: number, c: number): void;
export function loadDanceFile(a: number, b: number): number;
export function loadDanceString(a: number, b: number, c: number): void;
export function loadPoseFile(a: number, b: number): number;
export function loadPoseString(a: number, b: number, c: number): void;
export function loadStepFile(a: number, b: number, c: number, d: number): number;
export function loadStepString(a: number, b: number, c: number, d: number, e: number): void;
export function parseCourseString(a: number, b: number, c: number, d: number, e: number): void;
export function poseapproximation_debugString(a: number, b: number): void;
export function poseapproximation_limbErrors(a: number, b: number): void;
export function poseapproximation_name(a: number, b: number): void;
export function poseapproximation_worstLimbs(a: number, b: number, c: number): void;
export function poseapproximation_zErrors(a: number, b: number): void;
export function poseapproximation_zOrderErrors(a: number, b: number): void;
export function skeleton_debugString(a: number, b: number): void;
export function skeleton_render(a: number, b: number, c: number): number;
export function skeleton_resting(a: number): number;
export function stepById(a: number, b: number, c: number): number;
export function stepinfo_beats(a: number): number;
export function stepinfo_bodyShift(a: number, b: number): number;
export function stepinfo_id(a: number, b: number): void;
export function stepinfo_jumpHeight(a: number, b: number, c: number): void;
export function stepinfo_name(a: number, b: number): void;
export function stepinfo_rotatedSkeleton(a: number, b: number, c: number): number;
export function stepinfo_rustClone(a: number): number;
export function stepinfo_skeleton(a: number, b: number): number;
export function stepinfo_variation(a: number, b: number): void;
export function steps(a: number): void;
export function stepsByName(a: number, b: number, c: number): void;
export function stepsBySource(a: number, b: number, c: number): void;
export function tracker_addKeypoints(a: number, b: number, c: number): number;
export function tracker_alignBeat(a: number, b: number): void;
export function tracker_allPoseErrors(a: number, b: number, c: number): void;
export function tracker_bestFitPose(a: number, b: number, c: number): number;
export function tracker_clear(a: number): void;
export function tracker_currentPoseError(a: number): number;
export function tracker_detectDance(a: number): number;
export function tracker_detectionState(a: number): number;
export function tracker_enforceBeat(a: number, b: number): void;
export function tracker_expectedPoseBodyShift(a: number): number;
export function tracker_expectedPoseSkeleton(a: number): number;
export function tracker_exportFrame(a: number, b: number): number;
export function tracker_exportKeypoints(a: number, b: number): void;
export function tracker_futurePoseBodyShift(a: number, b: number): number;
export function tracker_futurePoseSkeleton(a: number, b: number): number;
export function tracker_halfBeatDuration(a: number): number;
export function tracker_hipPosition(a: number, b: number): number;
export function tracker_lastDetection(a: number): number;
export function tracker_new_from_global_collection(): number;
export function tracker_nextAudioEffect(a: number): number;
export function tracker_nextHalfBeat(a: number, b: number, c: number): number;
export function tracker_numDetectedPoses(a: number): number;
export function tracker_poseHint(a: number): number;
export function tracker_runDetection(a: number): number;
export function tracker_setBpm(a: number, b: number): void;
export function tracker_setErrorThreshold(a: number, b: number): void;
export function tracker_skeletonAt(a: number, b: number): number;
export function tracker_StepTracker(a: number, b: number, c: number): void;
export function tracker_trackedBeats(a: number, b: number): void;
export function tracker_UniqueStepTracker(a: number, b: number, c: number): void;
export function __wbg_audioeffect_free(a: number): void;
export function __wbg_cartesian2d_free(a: number): void;
export function __wbg_cartesian3d_free(a: number): void;
export function __wbg_course_free(a: number): void;
export function __wbg_dancebuilder_free(a: number): void;
export function __wbg_dancedetector_free(a: number): void;
export function __wbg_dancefilebuilder_free(a: number): void;
export function __wbg_danceinfo_free(a: number): void;
export function __wbg_detectedstep_free(a: number): void;
export function __wbg_detectionresult_free(a: number): void;
export function __wbg_exportedframe_free(a: number): void;
export function __wbg_get_audioeffect_timestamp(a: number): number;
export function __wbg_get_cartesian2d_x(a: number): number;
export function __wbg_get_cartesian2d_y(a: number): number;
export function __wbg_get_cartesian3d_x(a: number): number;
export function __wbg_get_cartesian3d_y(a: number): number;
export function __wbg_get_cartesian3d_z(a: number): number;
export function __wbg_get_detectedstep_end(a: number): number;
export function __wbg_get_detectedstep_error(a: number): number;
export function __wbg_get_detectedstep_start(a: number): number;
export function __wbg_get_detectionresult_failureReason(a: number): number;
export function __wbg_get_detectionresult_poseMatches(a: number): number;
export function __wbg_get_detectionresult_poseMisses(a: number): number;
export function __wbg_get_keypoints_fullyVisible(a: number): number;
export function __wbg_get_keypoints_left(a: number): number;
export function __wbg_get_keypoints_right(a: number): number;
export function __wbg_get_keypointsside_ankle(a: number): number;
export function __wbg_get_keypointsside_elbow(a: number): number;
export function __wbg_get_keypointsside_heel(a: number): number;
export function __wbg_get_keypointsside_hip(a: number): number;
export function __wbg_get_keypointsside_knee(a: number): number;
export function __wbg_get_keypointsside_shoulder(a: number): number;
export function __wbg_get_keypointsside_toes(a: number): number;
export function __wbg_get_keypointsside_wrist(a: number): number;
export function __wbg_get_limberror_error(a: number): number;
export function __wbg_get_limberror_weight(a: number): number;
export function __wbg_get_poseapproximation_error(a: number): number;
export function __wbg_get_poseapproximation_timestamp(a: number): number;
export function __wbg_get_renderablesegment_end(a: number): number;
export function __wbg_get_renderablesegment_start(a: number): number;
export function __wbg_get_renderablesegment_z(a: number): number;
export function __wbg_get_segment_angle(a: number): number;
export function __wbg_get_segment_r(a: number): number;
export function __wbg_get_segment_z(a: number): number;
export function __wbg_get_skeleton_backwards(a: number): number;
export function __wbg_get_skeleton_hip(a: number): number;
export function __wbg_get_skeleton_left(a: number): number;
export function __wbg_get_skeleton_right(a: number): number;
export function __wbg_get_skeletons_front(a: number): number;
export function __wbg_get_skeleton_shoulder(a: number): number;
export function __wbg_get_skeletonside_arm(a: number): number;
export function __wbg_get_skeletonside_foot(a: number): number;
export function __wbg_get_skeletonside_forearm(a: number): number;
export function __wbg_get_skeletonside_shin(a: number): number;
export function __wbg_get_skeletonside_thigh(a: number): number;
export function __wbg_get_skeletonsidev2_arm(a: number): number;
export function __wbg_get_skeletonsidev2_foot(a: number): number;
export function __wbg_get_skeletonsidev2_forearm(a: number): number;
export function __wbg_get_skeletonsidev2_shin(a: number): number;
export function __wbg_get_skeletonsidev2_thigh(a: number): number;
export function __wbg_get_skeleton_sideway(a: number): number;
export function __wbg_get_skeletons_side(a: number): number;
export function __wbg_get_skeletonv2_backwards(a: number): number;
export function __wbg_get_skeletonv2_hip(a: number): number;
export function __wbg_get_skeletonv2_left(a: number): number;
export function __wbg_get_skeletonv2_right(a: number): number;
export function __wbg_get_skeletonv2_shoulder(a: number): number;
export function __wbg_get_skeletonv2_sideway(a: number): number;
export function __wbg_get_zerror_error(a: number): number;
export function __wbg_get_zerror_quadrant_error(a: number): number;
export function __wbg_keypoints_free(a: number): void;
export function __wbg_keypointsside_free(a: number): void;
export function __wbg_lesson_free(a: number): void;
export function __wbg_lessonpart_free(a: number): void;
export function __wbg_limberror_free(a: number): void;
export function __wbg_poseapproximation_free(a: number): void;
export function __wbg_renderablesegment_free(a: number): void;
export function __wbg_segment_free(a: number): void;
export function __wbg_set_audioeffect_timestamp(a: number, b: number): void;
export function __wbg_set_cartesian2d_x(a: number, b: number): void;
export function __wbg_set_cartesian2d_y(a: number, b: number): void;
export function __wbg_set_cartesian3d_x(a: number, b: number): void;
export function __wbg_set_cartesian3d_y(a: number, b: number): void;
export function __wbg_set_cartesian3d_z(a: number, b: number): void;
export function __wbg_set_detectedstep_end(a: number, b: number): void;
export function __wbg_set_detectedstep_error(a: number, b: number): void;
export function __wbg_set_detectedstep_start(a: number, b: number): void;
export function __wbg_set_detectionresult_failureReason(a: number, b: number): void;
export function __wbg_set_detectionresult_poseMatches(a: number, b: number): void;
export function __wbg_set_detectionresult_poseMisses(a: number, b: number): void;
export function __wbg_set_keypoints_fullyVisible(a: number, b: number): void;
export function __wbg_set_keypoints_left(a: number, b: number): void;
export function __wbg_set_keypoints_right(a: number, b: number): void;
export function __wbg_set_keypointsside_ankle(a: number, b: number): void;
export function __wbg_set_keypointsside_elbow(a: number, b: number): void;
export function __wbg_set_keypointsside_heel(a: number, b: number): void;
export function __wbg_set_keypointsside_hip(a: number, b: number): void;
export function __wbg_set_keypointsside_knee(a: number, b: number): void;
export function __wbg_set_keypointsside_shoulder(a: number, b: number): void;
export function __wbg_set_keypointsside_toes(a: number, b: number): void;
export function __wbg_set_keypointsside_wrist(a: number, b: number): void;
export function __wbg_set_limberror_error(a: number, b: number): void;
export function __wbg_set_limberror_weight(a: number, b: number): void;
export function __wbg_set_poseapproximation_error(a: number, b: number): void;
export function __wbg_set_poseapproximation_timestamp(a: number, b: number): void;
export function __wbg_set_renderablesegment_end(a: number, b: number): void;
export function __wbg_set_renderablesegment_start(a: number, b: number): void;
export function __wbg_set_renderablesegment_z(a: number, b: number): void;
export function __wbg_set_segment_angle(a: number, b: number): void;
export function __wbg_set_segment_r(a: number, b: number): void;
export function __wbg_set_segment_z(a: number, b: number): void;
export function __wbg_set_skeleton_backwards(a: number, b: number): void;
export function __wbg_set_skeleton_hip(a: number, b: number): void;
export function __wbg_set_skeleton_left(a: number, b: number): void;
export function __wbg_set_skeleton_right(a: number, b: number): void;
export function __wbg_set_skeletons_front(a: number, b: number): void;
export function __wbg_set_skeleton_shoulder(a: number, b: number): void;
export function __wbg_set_skeletonside_arm(a: number, b: number): void;
export function __wbg_set_skeletonside_foot(a: number, b: number): void;
export function __wbg_set_skeletonside_forearm(a: number, b: number): void;
export function __wbg_set_skeletonside_shin(a: number, b: number): void;
export function __wbg_set_skeletonside_thigh(a: number, b: number): void;
export function __wbg_set_skeletonsidev2_arm(a: number, b: number): void;
export function __wbg_set_skeletonsidev2_foot(a: number, b: number): void;
export function __wbg_set_skeletonsidev2_forearm(a: number, b: number): void;
export function __wbg_set_skeletonsidev2_shin(a: number, b: number): void;
export function __wbg_set_skeletonsidev2_thigh(a: number, b: number): void;
export function __wbg_set_skeleton_sideway(a: number, b: number): void;
export function __wbg_set_skeletons_side(a: number, b: number): void;
export function __wbg_set_skeletonv2_backwards(a: number, b: number): void;
export function __wbg_set_skeletonv2_hip(a: number, b: number): void;
export function __wbg_set_skeletonv2_left(a: number, b: number): void;
export function __wbg_set_skeletonv2_right(a: number, b: number): void;
export function __wbg_set_skeletonv2_shoulder(a: number, b: number): void;
export function __wbg_set_skeletonv2_sideway(a: number, b: number): void;
export function __wbg_set_zerror_error(a: number, b: number): void;
export function __wbg_set_zerror_quadrant_error(a: number, b: number): void;
export function __wbg_skeleton_free(a: number): void;
export function __wbg_skeletons_free(a: number): void;
export function __wbg_skeletonside_free(a: number): void;
export function __wbg_skeletonsidev2_free(a: number): void;
export function __wbg_skeletonv2_free(a: number): void;
export function __wbg_stepinfo_free(a: number): void;
export function __wbg_tracker_free(a: number): void;
export function __wbg_zerror_free(a: number): void;
export function __wbg_zwrongordererror_free(a: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_export_0(a: number, b: number): number;
export function __wbindgen_export_1(a: number, b: number, c: number, d: number): number;
export function __wbindgen_export_3(a: number, b: number, c: number): number;
export function __wbindgen_export_4(a: number, b: number, c: number): void;
export function __wbindgen_export_5(a: number, b: number, c: number): void;
export function __wbindgen_export_6(a: number): void;
export function __wbindgen_export_7(a: number, b: number, c: number, d: number): void;
export function zerror_name(a: number, b: number): void;
export function zwrongordererror_expected(a: number, b: number): void;
/* tslint:disable */
